<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ns.sql.FriendMapper">
	<!-- 내 친구 목록 불러오기 -->
	<select id="getFriendList" parameterType="int" resultType="member">
	    SELECT m.member_id, m.nickName, m.email
	    FROM friend f
	    JOIN member m ON (
	        (f.member_id_min = #{VALUE} AND m.member_id = f.member_id_max) OR
	        (f.member_id_max = #{VALUE} AND m.member_id = f.member_id_min)
	    )
	    WHERE (f.member_id_min = #{VALUE} OR f.member_id_max = #{VALUE})
	      AND f.status = 'accepted'
	</select>

	<select id="getFriend" parameterType="hashmap" resultType="friend">
	    SELECT friend_id, member_id_min, member_id_max, status
	    FROM friend
	    WHERE member_id_min = LEAST(#{memId1}, #{memId2})
	      AND member_id_max = GREATEST(#{memId1}, #{memId2})
	</select>
	<insert id="addFriend" parameterType="friend" useGeneratedKeys="true" keyProperty="friendId">
    	INSERT INTO friend (mem1_id, mem2_id, member_id_min, member_id_max, status)
    	VALUES (#{mem1Id}, #{mem2Id}, #{memberIdMin}, #{memberIdMax}, #{status})
	</insert>

	<update id="updateFriendStatus" parameterType="friend">
    	UPDATE friend
    	SET status = #{status}
    	WHERE member_id_min = #{memberIdMin}
      	AND member_id_max = #{memberIdMax}
	</update>
	<delete id="deleteFriend" parameterType="hashmap">
    DELETE FROM friend
    WHERE member_id_min = #{memberIdMin}
      AND member_id_max = #{memberIdMax}
</delete>
</mapper>

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 